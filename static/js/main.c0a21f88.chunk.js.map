{"version":3,"sources":["Components/Navbar.js","Components/Renderer/Product/Product.js","Components/Renderer/Renderer.js","App.js","index.js"],"names":["NavBar","state","Navbar","fixed","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","ButtonGroup","aria-label","Button","onClick","props","fetchProducts","Component","Product","loading","availability","handleClick","manufacturer","a","checkAvailability","setState","result","this","data","name","color","price","Card","style","width","margin","marginTop","marginBottom","Body","Title","Text","disabled","Renderer","renderMoreProducts","products","amountToRender","rendered","amount","concat","slice","prevProps","Container","Row","map","i","Col","size","block","App","message","selected","extractAvailability","string","includes","undefined","find","fetch","response","json","push","searchMe","o","availabilityData","toUpperCase","DATAPAYLOAD","category","p","items","findIndex","length","Jumbotron","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a21f88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, Button, NavDropdown, ButtonGroup } from 'react-bootstrap';\r\n\r\nclass NavBar extends Component {\r\n    state = {  }\r\n\r\n\r\n    render() { \r\n        return (\r\n<Navbar fixed=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav>\r\n    <ButtonGroup aria-label=\"Basic example\">\r\n      <Button onClick={() => {this.props.fetchProducts(\"jackets\")}} variant=\"secondary\">Jackets</Button>\r\n      <Button onClick={() => {this.props.fetchProducts(\"shirts\")}} variant=\"secondary\">Shirts</Button>\r\n      <Button onClick={() => {this.props.fetchProducts(\"accessories\")}} variant=\"secondary\">Accessories</Button>\r\n    </ButtonGroup>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n  );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\n\r\nclass Product extends Component {\r\n\r\n  state = { \r\n    loading : false,\r\n    availability : \"Check availability\"\r\n  }\r\n\r\n  handleClick = async (manufacturer, id) => {\r\n\r\n    const { checkAvailability } = this.props\r\n\r\n    this.setState({loading : true})\r\n\r\n    const result = await checkAvailability(manufacturer, id)\r\n\r\n    this.setState({availability : result})\r\n  }\r\n\r\n  render() { \r\n    const { availability, loading } = this.state\r\n    const { name, id, color, manufacturer, price } = this.props.data\r\n    return ( \r\n      <Card style={{ width: '18rem', margin:\"auto\", marginTop : \"10px\", marginBottom: \"10px\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{name}</Card.Title>\r\n        <Card.Text>Id : {id}</Card.Text>\r\n        <Card.Text>manufacturer : {manufacturer}</Card.Text>\r\n        <Card.Text>Color : {color}</Card.Text>\r\n        <Card.Text>price : {price}</Card.Text>\r\n        <Button disabled={loading} onClick={() => {this.handleClick(manufacturer, id)}}>{availability}</Button>\r\n      </Card.Body>\r\n    </Card>)\r\n  }\r\n}\r\n \r\nexport default Product;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Row, Container } from 'react-bootstrap';\r\nimport Product from './Product/Product';\r\n\r\n\r\n\r\n\r\n\r\nclass Renderer extends Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        const {products, amountToRender} = props\r\n\r\n        this.state = {\r\n            amount : amountToRender,\r\n            rendered : products.slice(0, amountToRender)\r\n        }\r\n    }\r\n\r\n    renderMoreProducts = () => {\r\n\r\n        const { products, amountToRender } = this.props\r\n\r\n        let { rendered, amount } = this.state\r\n        \r\n        rendered = rendered.concat(products.slice(amount, amount + amountToRender))\r\n\r\n        amount += amountToRender\r\n\r\n        this.setState({rendered, amount})\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // Check if props updated, update them\r\n\r\n        const { products, amountToRender } = this.props\r\n\r\n        if (prevProps.products !== this.props.products) { \r\n\r\n            this.setState({rendered : products.slice(0, amountToRender)})\r\n\r\n        }\r\n      }\r\n    \r\n\r\n    render() {\r\n\r\n        const { rendered } = this.state\r\n        \r\n        return ( \r\n        <Container>\r\n            <Row>\r\n            {rendered.map(i => {return <Col><Product checkAvailability={this.props.checkAvailability} key={i.id} data={i}/></Col>})}\r\n            </Row>\r\n            <Row>\r\n            <Button onClick={() => {this.renderMoreProducts()}} variant=\"primary\" size=\"lg\" block>\r\n            Load more...\r\n            </Button>\r\n            </Row>\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Renderer;\r\n\r\n","import './App.css';\nimport NavBar from './Components/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport Renderer from './Components/Renderer/Renderer';\nimport { Jumbotron } from 'react-bootstrap';\n\nclass App extends Component {\n  state = { \n    message : \"Choose a product\",\n    availability : [],\n    selected : null,\n    products : []\n  }\n\n  extractAvailability = (string) => { // Extract & return availability data from a chaotic string\n\n    \n    if (string.includes(\">INSTOCK<\")) {\n      return \"In stock\"\n    }\n    if (string.includes(\">OUTOFSTOCK<\")) {\n      return \"Out of stock\"\n    }\n    if (string.includes(\">LESSTHAN10<\")) {\n      return \"Less than 10\"\n    }\n    else {\n      return \"NAN\"\n    }\n  }\n\n\n  checkAvailability = async (manufacturer, id) => { // Called by product, Check availability data of a product\n\n    try {\n      let { products, availability } = this.state\n\n      if (availability.find(i => i.manufacturer === manufacturer) === undefined) { // Check if data already fetched\n  \n        const response = await fetch(`https://bad-api-assignment.reaktor.com/availability/${manufacturer}`)\n  \n        const data = await response.json()\n  \n        availability.push({\n          manufacturer : manufacturer,\n          products : data.response\n        })\n  \n        this.setState({ availability : availability })\n      }\n  \n  \n      const searchMe = availability.find(o => o.manufacturer === manufacturer)\n  \n      const availabilityData = searchMe.products.find(i => i.id === id.toUpperCase())\n  \n      return this.extractAvailability(availabilityData.DATAPAYLOAD)\n    }\n    \n    catch {\n      return \"Failed to fetch data\"\n    }\n    \n  }\n  \n  fetchProducts = async (category) => { // Fetch & get products\n\n    try {\n      let { products, selected } = this.state\n\n      if (products.find(p => p.category === category) === undefined) { // Check if data is already fetched\n  \n        const response = await fetch(`https://bad-api-assignment.reaktor.com/products/${category}`)\n  \n        const items = await response.json()\n    \n        products.push({\n          category : category, \n          items : items\n        })\n    \n      }\n  \n      selected = products.findIndex(i => i.category === category) // Shows current Products\n  \n      this.setState({products : products, selected : selected})\n    }\n\n    catch {\n      this.setState({message : \"Could not Connect to API\"})\n    }\n\n  }\n  \n  render() { \n    const {selected, products, message} = this.state\n\n    if (products.length <= 0) {\n      return (<div>\n      <NavBar fetchProducts={this.fetchProducts}/>\n      <Jumbotron fluid>\n    <h1>Pick something</h1>\n    <p>\n    {message}\n    </p>\n</Jumbotron>\n        \n      </div>)\n    }\n\n    else {\n      return ( \n      <div>\n        <NavBar fetchProducts={this.fetchProducts}/>\n        <div style={{marginBottom:\"30px\"}}></div>\n        <Renderer checkAvailability={this.checkAvailability} products={products[selected].items} amountToRender={10}/>\n        \n      </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n\n\n//","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}